package com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.seatrend.utilsdk.database.greendao.table.DataBean;
import com.seatrend.utilsdk.database.greendao.table.OnePictureIndexEntity;

import com.greendao.gen.DataBeanDao;
import com.greendao.gen.OnePictureIndexEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dataBeanDaoConfig;
    private final DaoConfig onePictureIndexEntityDaoConfig;

    private final DataBeanDao dataBeanDao;
    private final OnePictureIndexEntityDao onePictureIndexEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dataBeanDaoConfig = daoConfigMap.get(DataBeanDao.class).clone();
        dataBeanDaoConfig.initIdentityScope(type);

        onePictureIndexEntityDaoConfig = daoConfigMap.get(OnePictureIndexEntityDao.class).clone();
        onePictureIndexEntityDaoConfig.initIdentityScope(type);

        dataBeanDao = new DataBeanDao(dataBeanDaoConfig, this);
        onePictureIndexEntityDao = new OnePictureIndexEntityDao(onePictureIndexEntityDaoConfig, this);

        registerDao(DataBean.class, dataBeanDao);
        registerDao(OnePictureIndexEntity.class, onePictureIndexEntityDao);
    }
    
    public void clear() {
        dataBeanDaoConfig.clearIdentityScope();
        onePictureIndexEntityDaoConfig.clearIdentityScope();
    }

    public DataBeanDao getDataBeanDao() {
        return dataBeanDao;
    }

    public OnePictureIndexEntityDao getOnePictureIndexEntityDao() {
        return onePictureIndexEntityDao;
    }

}
